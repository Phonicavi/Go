蒙特卡洛模拟是当前比较流行的围棋AI方法，CrazyStone是最为著名的根据随机模拟而不是围棋技巧下棋的AI。[1]中所使用的蒙特卡洛方法囊括了最基本的两个要点，一个是随机模拟棋盘，一种是结合蒙特卡洛评估与minmax树搜索，文中使用的树形结构与早先的CrazyStone保持一致。

要理解这方面的问题，还是要从k臂赌博机问题说起，作为一个赌徒，要达到的目的就是通过迭代投注获得最大化回报，通常我们假设赌徒对先验知识是未知的，但通过重复实验，他可以集中在回报率高的赌博机上下注。所以其中比较重要的问题就是如何平衡，根据已知的知识获得最大化的回报，和通过新的尝试增加知识。exploitation-exploration dilemma就是如此。

UCB就是应用这样的思想的一种搜索，每次在选择下一扩展节点时，根据一掌握的知识，并权衡带来的增添的知识以选择下一节点。UCB-TUNED是在UCB基础上，通过经验得出的启发式函数，在[1]中得到了应用。

UCT是UCB在minmax树搜索上的扩展，基本思想在于，将每个节点都作为一个独立的赌博机，子节点是独立的赌博机臂。搜索通过在有限时间内，实验臂序列进行而非迭代处理单个节点。

UCT比alpha-beta search要好，因为有时并不需要得到最优解，而只需得到较优解，毕竟在Go中数深度很大而且分支参数也很大，所以找到最优解往往很不现实。

首先，在UCT中，树搜索可以停止于任意时刻，而且并不会过度影响其性能，其次UCT鲁棒性更强，因为计算得到子节点均值是根据遍历次数决定的，这个值是对最大值的平滑预测，取决于预测值的大小和这些预测值的置信度，如果一个子节点有相对较高的预测值，这个节点的被展开概率将会大于其他节点。最后，树不对称生成，因此回报率好的子节点拓展的更深。

UCT的优点之一就是根据实际深度自动调整，对于树的每个分支，实际深度就是。。，这些分支的预测值将收敛的比其他快，UCT会话费更多时间在其他有意思的分支上面。




[1]modification of UCT with patterns
